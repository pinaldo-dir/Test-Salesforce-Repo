<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Chatter_Manager_0_0</name>
        <label>Chatter Manager</label>
        <locationX>2371</locationX>
        <locationY>384</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <stringValue>@[{!$Record.Case__r.Assigned_Deputy__r.User__r.ManagerId}] This Case Payment was created a day ago and allocation recommendations have not yet been provided.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Chatter_Manager_0_0_0</name>
        <label>Chatter Manager</label>
        <locationX>2899</locationX>
        <locationY>384</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <stringValue>@[{!$Record.Case__r.Assigned_Deputy__r.User__r.ManagerId}] This Case Payment was created a WEEK ago and allocation recommendations have not yet been provided.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Chatter_on_Registration</name>
        <label>Chatter on Registration</label>
        <locationX>1579</locationX>
        <locationY>600</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <connector>
            <targetReference>On_Payment_Plan_0</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <stringValue>A Case Payment in the amount of {!$Record.Payment_Amount__c} has posted to a BOFE Case related to this Registration.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Case__r.Registration__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Email sent to Deputy (or their manager) to allocate funds on this new Case Payment</description>
        <name>Email_Deputy_New_Case_Payment</name>
        <label>Email Deputy New Case Payment</label>
        <locationX>787</locationX>
        <locationY>600</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>EmailAlertAddress</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>dlsedonotreply@dir.ca.gov</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>Case_Payment_Created_Email_Subject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>Case_Payment_Created_Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>logEmailOnSend</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Emails assigned Deputy (or their manager) that a Case Payment was returned by the bank.</description>
        <name>Email_Deputy_Returned_Payment</name>
        <label>Email Deputy Returned Payment</label>
        <locationX>1425</locationX>
        <locationY>2808</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Query_All_CPs_Under_Case</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>EmailAlertAddress</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>dlsedonotreply@dir.ca.gov</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>Case_Payment_Returned_Email_Subject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>Case_Payment_Returned_Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>logEmailOnSend</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>Set_Bi_Weekly_PP_Due_Date</name>
        <label>Set Bi-Weekly PP Due Date</label>
        <locationX>314</locationX>
        <locationY>1932</locationY>
        <assignmentItems>
            <assignToReference>Query_Payment_Plan.Due_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AdvanceBiWeeklyPPDueDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Payment_Plan_Status</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Monthly_PP_Due_Date</name>
        <label>Set Monthly PP Due Date</label>
        <locationX>842</locationX>
        <locationY>1932</locationY>
        <assignmentItems>
            <assignToReference>Query_Payment_Plan.Due_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AdvanceMonthlyPPDueDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Payment_Plan_Status</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_PP_Status_Current</name>
        <label>Set PP Status Current</label>
        <locationX>710</locationX>
        <locationY>2232</locationY>
        <assignmentItems>
            <assignToReference>Query_Payment_Plan.Payment_Plan_Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Current</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_PP</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_PP_Status_Not_Current</name>
        <label>Set PP Status Not Current</label>
        <locationX>974</locationX>
        <locationY>2232</locationY>
        <assignmentItems>
            <assignToReference>Query_Payment_Plan.Payment_Plan_Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Not Current</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_PP</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_PP_Status_Satisfied</name>
        <label>Set PP Status Satisfied</label>
        <locationX>446</locationX>
        <locationY>2232</locationY>
        <assignmentItems>
            <assignToReference>Query_Payment_Plan.Payment_Plan_Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Satisfied</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_PP</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_PP_Total_Amount_of_Payments_Made</name>
        <label>Set PP Total Amount of Payments Made</label>
        <locationX>710</locationX>
        <locationY>1716</locationY>
        <assignmentItems>
            <assignToReference>Query_Payment_Plan.Total_Payment_Amount__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CpSumForPpRollup</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Payment_Plan_Frequency</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Quarterly_PP_Due_Date</name>
        <label>Set Quarterly PP Due Date</label>
        <locationX>1106</locationX>
        <locationY>1932</locationY>
        <assignmentItems>
            <assignToReference>Query_Payment_Plan.Due_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AdvanceQuarterlyPPDueDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Payment_Plan_Status</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Semi_Monthly_PP_Due_Date</name>
        <label>Set Semi-Monthly PP Due Date</label>
        <locationX>578</locationX>
        <locationY>1932</locationY>
        <assignmentItems>
            <assignToReference>Query_Payment_Plan.Due_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AdvanceSemiMonthlyPPDueDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Payment_Plan_Status</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Weekly_PP_Due_Date</name>
        <label>Set Weekly PP Due Date</label>
        <locationX>50</locationX>
        <locationY>1932</locationY>
        <assignmentItems>
            <assignToReference>Query_Payment_Plan.Due_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AdvanceWeeklyPPDueDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Payment_Plan_Status</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Intended to sum all CPs, including Voided and Returned ones along with their respective Corrective Entry record amounts that should negate them.</description>
        <name>Sum_Payment_Amount</name>
        <label>Sum Payment Amount</label>
        <locationX>798</locationX>
        <locationY>1524</locationY>
        <assignmentItems>
            <assignToReference>CpSumForPpRollup</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Sum_CPs_for_PP.Payment_Amount__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Sum_CPs_for_PP</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Sum_Payment_Amount_0</name>
        <label>Sum Payment Amount</label>
        <locationX>1821</locationX>
        <locationY>3324</locationY>
        <assignmentItems>
            <assignToReference>CpSumForCaseRollup</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Sum_CPs_for_Case.Payment_Amount__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Sum_CPs_for_Case</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Correct_Deposit_Account</name>
        <label>Correct Deposit Account?</label>
        <locationX>1733</locationX>
        <locationY>3216</locationY>
        <defaultConnector>
            <targetReference>Sum_Payment_Amount_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Other Deposit Accounts</defaultConnectorLabel>
        <rules>
            <name>X108_or_None</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Sum_CPs_for_Case.Receipt__r.Deposit_Account__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>108</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Sum_CPs_for_Case.Receipt__r.Deposit_Account__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>None</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Sum_CPs_for_Case</targetReference>
            </connector>
            <label>108 or None</label>
        </rules>
    </decisions>
    <decisions>
        <name>Eligible_For_Escalation</name>
        <label>Eligible For Escalation?</label>
        <locationX>2503</locationX>
        <locationY>276</locationY>
        <defaultConnectorLabel>Not Eligible</defaultConnectorLabel>
        <rules>
            <name>Eligible</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Receipt__r.Office_Unit__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>JEU</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Receipt__r.Created_Via_PartyToPartyLWC__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Receipt__r.Created_Via_PartyPaymentVFP__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Case_Payment_Recommended_Date__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Chatter_Manager_0_0</targetReference>
            </connector>
            <label>Eligible</label>
        </rules>
    </decisions>
    <decisions>
        <name>Eligible_For_Escalation_0</name>
        <label>Eligible For Escalation?</label>
        <locationX>3031</locationX>
        <locationY>276</locationY>
        <defaultConnectorLabel>Not Eligible</defaultConnectorLabel>
        <rules>
            <name>Eligible_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Receipt__r.Office_Unit__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>JEU</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Receipt__r.Created_Via_PartyToPartyLWC__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Receipt__r.Created_Via_PartyPaymentVFP__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Case_Payment_Recommended_Date__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Chatter_Manager_0_0_0</targetReference>
            </connector>
            <label>Eligible</label>
        </rules>
    </decisions>
    <decisions>
        <name>Initial_Conditions</name>
        <label>Initial Conditions</label>
        <locationX>1557</locationX>
        <locationY>276</locationY>
        <defaultConnector>
            <targetReference>On_Payment_Plan_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>IsNew</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.CreatedDate</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.LastModifiedDate</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Need_Allocation_Notice</targetReference>
            </connector>
            <label>IsNew</label>
        </rules>
        <rules>
            <name>Status_Changed</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Status</targetReference>
            </connector>
            <label>Status Changed</label>
        </rules>
    </decisions>
    <decisions>
        <description>Allocation notification sent only on CPs with a &apos;New&apos; Status that are not Party to Party payments.</description>
        <name>Need_Allocation_Notice</name>
        <label>Need Allocation Notice?</label>
        <locationX>919</locationX>
        <locationY>384</locationY>
        <defaultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Status</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Is Party Pay || Is Not New Status</defaultConnectorLabel>
        <rules>
            <name>Not_Party_Pay_Is_New_Status</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Receipt__r.Created_Via_PartyToPartyLWC__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Receipt__r.Created_Via_PartyPaymentVFP__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Deputy_Task_To_Recommend_0</targetReference>
            </connector>
            <label>Not Party Pay &amp; Is New Status</label>
        </rules>
    </decisions>
    <decisions>
        <name>On_Payment_Plan_0</name>
        <label>On Payment Plan?</label>
        <locationX>1557</locationX>
        <locationY>984</locationY>
        <defaultConnector>
            <targetReference>Payment_Returned_From_Bank</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Payment Plan</defaultConnectorLabel>
        <rules>
            <name>Payment_Plan_Exists_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Payment_Plan__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Query_Payment_Plan</targetReference>
            </connector>
            <label>Payment Plan Exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>Payment_Plan_Frequency</name>
        <label>Payment Plan Frequency?</label>
        <locationX>710</locationX>
        <locationY>1824</locationY>
        <defaultConnector>
            <targetReference>Payment_Plan_Status</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Single</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Payment_Plan__r.Frequency__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Single</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Payment_Plan_Status</targetReference>
            </connector>
            <label>Single</label>
        </rules>
        <rules>
            <name>Weekly</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Payment_Plan__r.Frequency__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Weekly</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Weekly_PP_Due_Date</targetReference>
            </connector>
            <label>Weekly</label>
        </rules>
        <rules>
            <name>Bi_Weekly</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Payment_Plan__r.Frequency__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Bi-Weekly</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Bi_Weekly_PP_Due_Date</targetReference>
            </connector>
            <label>Bi-Weekly</label>
        </rules>
        <rules>
            <name>Semi_Monthly</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Payment_Plan__r.Frequency__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Semi-monthly</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Semi_Monthly_PP_Due_Date</targetReference>
            </connector>
            <label>Semi-Monthly</label>
        </rules>
        <rules>
            <name>Monthly</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Payment_Plan__r.Frequency__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Monthly</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Monthly_PP_Due_Date</targetReference>
            </connector>
            <label>Monthly</label>
        </rules>
        <rules>
            <name>Quarterly</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Payment_Plan__r.Frequency__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Quarterly</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Quarterly_PP_Due_Date</targetReference>
            </connector>
            <label>Quarterly</label>
        </rules>
        <rules>
            <name>Irregular</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Payment_Plan__r.Frequency__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Irregular</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Payment_Plan_Status</targetReference>
            </connector>
            <label>Irregular</label>
        </rules>
    </decisions>
    <decisions>
        <name>Payment_Plan_Status</name>
        <label>Payment Plan Status?</label>
        <locationX>710</locationX>
        <locationY>2124</locationY>
        <defaultConnector>
            <targetReference>Set_PP_Status_Not_Current</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Current</defaultConnectorLabel>
        <rules>
            <name>Satisfied</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Total_Payment_Amount__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>Query_Payment_Plan.Payment_Plan_Total_Amount_Due__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_PP_Status_Satisfied</targetReference>
            </connector>
            <label>Satisfied</label>
        </rules>
        <rules>
            <name>Current</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Due_Date__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>$Flow.CurrentDate</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_PP_Status_Current</targetReference>
            </connector>
            <label>Current</label>
        </rules>
    </decisions>
    <decisions>
        <description>There&apos;s a LOT of Payment Plan records with missing required fields. To prevent this flow from failing, we ignore those bad data. New Payment Plans created after ~Feb 2023 should be well-formed.</description>
        <name>Payment_Plan_Valid</name>
        <label>Payment Plan Valid?</label>
        <locationX>1216</locationX>
        <locationY>1200</locationY>
        <defaultConnector>
            <targetReference>Payment_Returned_From_Bank</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Valid</defaultConnectorLabel>
        <rules>
            <name>Valid</name>
            <conditionLogic>1 AND 2 AND 3 AND 4 AND 5 AND 6 AND 7 AND ((8 AND 9) OR (10 AND 11) OR (12 AND 13 AND 14 AND 15) OR (16 AND 17) OR (18 AND 19))</conditionLogic>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Case__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Responsible_Party__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Payment_Plan_Total_Amount_Due__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Number_of_Payments__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Payment_Plan_Regular_Payment__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Payment_Plan_Start_Date__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Date_of_First_Payment__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Frequency__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Weekly</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Day_of_Week_Payment_Due__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Frequency__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Bi-Weekly</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Day_of_Week_Payment_Due__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Frequency__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Semi-monthly</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Day_of_Monthly_Payment_Due__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Day_of_Second_Monthly_Payment_Due__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>fDayOfMonthlyPaymentDueLessThanDayOfSecondMonthlyPaymentDue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Frequency__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Monthly</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Day_of_Monthly_Payment_Due__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Frequency__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Quarterly</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Query_Payment_Plan.Day_of_Monthly_Payment_Due__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Query_All_CPs_Under_PP</targetReference>
            </connector>
            <label>Valid</label>
        </rules>
    </decisions>
    <decisions>
        <name>Payment_Returned_From_Bank</name>
        <label>Payment Returned From Bank</label>
        <locationX>1557</locationX>
        <locationY>2700</locationY>
        <defaultConnector>
            <targetReference>Query_All_CPs_Under_Case</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Returned_Item</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Returned_Item__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Returned_Item__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Email_Deputy_Returned_Payment</targetReference>
            </connector>
            <label>Returned Item</label>
        </rules>
    </decisions>
    <decisions>
        <name>Registration_Case</name>
        <label>Registration Case?</label>
        <locationX>1711</locationX>
        <locationY>492</locationY>
        <defaultConnector>
            <targetReference>On_Payment_Plan_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Registration</defaultConnectorLabel>
        <rules>
            <name>Registration</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Case__r.Registration__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Chatter_on_Registration</targetReference>
            </connector>
            <label>Registration</label>
        </rules>
    </decisions>
    <decisions>
        <name>Status</name>
        <label>Status</label>
        <locationX>1667</locationX>
        <locationY>384</locationY>
        <defaultConnector>
            <targetReference>On_Payment_Plan_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Allocations_Recommended</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Allocations Recommended</stringValue>
                </rightValue>
            </conditions>
            <label>Allocations Recommended</label>
        </rules>
        <rules>
            <name>Posted</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Posted</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Registration_Case</targetReference>
            </connector>
            <label>Posted</label>
        </rules>
    </decisions>
    <description>Tasks and emails Deputy to allocate new Case Payments. Updates Payment Plan due date, if any.</description>
    <environments>Default</environments>
    <formulas>
        <name>AdvanceBiWeeklyPPDueDate</name>
        <dataType>Date</dataType>
        <expression>{!$Record.Payment_Plan__r.Date_of_First_Payment__c} + (14 * {!NumberOfFullPaymentsMadeOnPP})</expression>
    </formulas>
    <formulas>
        <name>AdvanceMonthlyPPDueDate</name>
        <dataType>Date</dataType>
        <expression>ADDMONTHS({!$Record.Payment_Plan__r.Date_of_First_Payment__c}, {!NumberOfFullPaymentsMadeOnPP})</expression>
    </formulas>
    <formulas>
        <name>AdvanceQuarterlyPPDueDate</name>
        <dataType>Date</dataType>
        <expression>ADDMONTHS({!$Record.Payment_Plan__r.Date_of_First_Payment__c}, (3 * {!NumberOfFullPaymentsMadeOnPP}))</expression>
    </formulas>
    <formulas>
        <description>Conditional on whether the Date of First Payment is on the 1st or 2nd semi-monthly due date, and also on whether the number of full payments received is even (advance full months) or odd (advance full months +/- due date difference).</description>
        <name>AdvanceSemiMonthlyPPDueDate</name>
        <dataType>Date</dataType>
        <expression>IF(
    DAY({!$Record.Payment_Plan__r.Date_of_First_Payment__c}) == VALUE(TEXT({!$Record.Payment_Plan__r.Day_of_Monthly_Payment_Due__c})),
    IF(
        MOD({!NumberOfFullPaymentsMadeOnPP}, 2) == 0,
        ADDMONTHS({!$Record.Payment_Plan__r.Date_of_First_Payment__c}, {!NumberOfFullPaymentsMadeOnPP} / 2),
        ADDMONTHS({!$Record.Payment_Plan__r.Date_of_First_Payment__c} + {!PPSemiMonthlyDueDateDifference}, FLOOR({!NumberOfFullPaymentsMadeOnPP} / 2))
    ),
    IF(
        MOD({!NumberOfFullPaymentsMadeOnPP}, 2) == 0,
        ADDMONTHS({!$Record.Payment_Plan__r.Date_of_First_Payment__c}, {!NumberOfFullPaymentsMadeOnPP} / 2),
        ADDMONTHS({!$Record.Payment_Plan__r.Date_of_First_Payment__c} - {!PPSemiMonthlyDueDateDifference}, CEILING({!NumberOfFullPaymentsMadeOnPP} / 2))
    )
)</expression>
    </formulas>
    <formulas>
        <name>AdvanceWeeklyPPDueDate</name>
        <dataType>Date</dataType>
        <expression>{!$Record.Payment_Plan__r.Date_of_First_Payment__c} + (7 * {!NumberOfFullPaymentsMadeOnPP})</expression>
    </formulas>
    <formulas>
        <name>Case_Management_Hyperlink</name>
        <dataType>String</dataType>
        <expression>LEFT($Api.Enterprise_Server_URL_580, FIND( &apos;/services&apos;, $Api.Enterprise_Server_URL_580)) &amp; {!$Record.Case__r.Id}</expression>
    </formulas>
    <formulas>
        <name>Case_Payment_Hyperlink</name>
        <dataType>String</dataType>
        <expression>LEFT($Api.Enterprise_Server_URL_580, FIND( &apos;/services&apos;, $Api.Enterprise_Server_URL_580)) &amp; {!$Record.Id}</expression>
    </formulas>
    <formulas>
        <description>When a Deputy is inactive, pulls in that Deputy&apos;s manager&apos;s email address</description>
        <name>EmailAlertAddress</name>
        <dataType>String</dataType>
        <expression>IF({!$Record.Case__r.Assigned_Deputy__r.User__r.IsActive}, {!$Record.Case__r.Assigned_Deputy__r.User__r.Email}, {!$Record.Case__r.Assigned_Deputy__r.User__r.Manager.Email})</expression>
    </formulas>
    <formulas>
        <name>fDayOfMonthlyPaymentDueLessThanDayOfSecondMonthlyPaymentDue</name>
        <dataType>Boolean</dataType>
        <expression>VALUE(TEXT({!Query_Payment_Plan.Day_of_Monthly_Payment_Due__c})) &lt; VALUE(TEXT({!Query_Payment_Plan.Day_of_Second_Monthly_Payment_Due__c}))</expression>
    </formulas>
    <formulas>
        <description>Calculated on the sum of CPs and PP.Regular Payment Amount</description>
        <name>NumberOfFullPaymentsMadeOnPP</name>
        <dataType>Number</dataType>
        <expression>FLOOR({!CpSumForPpRollup} / {!$Record.Payment_Plan__r.Payment_Plan_Regular_Payment__c})</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <description>Difference between the PP.Day_of_Second_Monthly_Payment_Due__c and PP.Day_of_Monthly_Payment_Due__c</description>
        <name>PPSemiMonthlyDueDateDifference</name>
        <dataType>Number</dataType>
        <expression>VALUE(TEXT({!$Record.Payment_Plan__r.Day_of_Second_Monthly_Payment_Due__c})) - VALUE(TEXT({!$Record.Payment_Plan__r.Day_of_Monthly_Payment_Due__c}))</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>RecommendTaskDueDate</name>
        <dataType>Date</dataType>
        <expression>TODAY() + 1</expression>
    </formulas>
    <interviewLabel>Case Payment Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case Payment Flow</label>
    <loops>
        <name>Sum_CPs_for_Case</name>
        <label>Sum CPs for Case</label>
        <locationX>1557</locationX>
        <locationY>3108</locationY>
        <collectionReference>Query_All_CPs_Under_Case</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Correct_Deposit_Account</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_Case_Deposited_Funds</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Sum_CPs_for_PP</name>
        <label>Sum CPs for PP</label>
        <locationX>710</locationX>
        <locationY>1416</locationY>
        <collectionReference>Query_All_CPs_Under_PP</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Sum_Payment_Amount</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Set_PP_Total_Amount_of_Payments_Made</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Deputy_Task_To_Recommend_0</name>
        <label>Deputy Task To Recommend</label>
        <locationX>787</locationX>
        <locationY>492</locationY>
        <connector>
            <targetReference>Email_Deputy_New_Case_Payment</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>RecommendTaskDueDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.Case__r.Assigned_Deputy__r.User__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <stringValue>Normal</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Provide Case Payment Recommendation Instructions</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Query_All_CPs_Under_Case</name>
        <label>Query All CPs Under Case</label>
        <locationX>1557</locationX>
        <locationY>3000</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Sum_CPs_for_Case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Case__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Case__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Voided_Item__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Deposited__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Case_Payment__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Payment_Amount__c</queriedFields>
        <queriedFields>Receipt__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Query_All_CPs_Under_PP</name>
        <label>Query All CPs Under PP</label>
        <locationX>710</locationX>
        <locationY>1308</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Sum_CPs_for_PP</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3 OR 4 OR 5)</filterLogic>
        <filters>
            <field>Payment_Plan__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Payment_Plan__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Posted</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Voided</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Deposited-Returned</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Corrective Entry</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Case_Payment__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Payment_Amount__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Query_Payment_Plan</name>
        <label>Query Payment Plan</label>
        <locationX>1216</locationX>
        <locationY>1092</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Payment_Plan_Valid</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Payment_Plan__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Payment_Plan__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Frequency__c</queriedFields>
        <queriedFields>Due_Date__c</queriedFields>
        <queriedFields>Payment_Plan_Regular_Payment__c</queriedFields>
        <queriedFields>Date_of_First_Payment__c</queriedFields>
        <queriedFields>Payment_Plan_Total_Amount_Due__c</queriedFields>
        <queriedFields>Case__c</queriedFields>
        <queriedFields>Responsible_Party__c</queriedFields>
        <queriedFields>Number_of_Payments__c</queriedFields>
        <queriedFields>Payment_Plan_Start_Date__c</queriedFields>
        <queriedFields>Day_of_Week_Payment_Due__c</queriedFields>
        <queriedFields>Day_of_Monthly_Payment_Due__c</queriedFields>
        <queriedFields>Day_of_Second_Monthly_Payment_Due__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case_Deposited_Funds</name>
        <label>Update Case Deposited Funds</label>
        <locationX>1557</locationX>
        <locationY>3600</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Case__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Deposited_Funds__c</field>
            <value>
                <elementReference>CpSumForCaseRollup</elementReference>
            </value>
        </inputAssignments>
        <object>DIR_Case__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_PP</name>
        <label>Update PP</label>
        <locationX>710</locationX>
        <locationY>2424</locationY>
        <connector>
            <targetReference>Payment_Returned_From_Bank</targetReference>
        </connector>
        <inputReference>Query_Payment_Plan</inputReference>
    </recordUpdates>
    <start>
        <locationX>2168</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Initial_Conditions</targetReference>
        </connector>
        <object>Case_Payment__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <scheduledPaths>
            <name>X1_Day_After_Created_Date</name>
            <connector>
                <targetReference>Eligible_For_Escalation</targetReference>
            </connector>
            <label>1 Day After Created Date</label>
            <offsetNumber>1</offsetNumber>
            <offsetUnit>Days</offsetUnit>
            <recordField>CreatedDate</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <scheduledPaths>
            <name>X7_Days_After_Created_Date</name>
            <connector>
                <targetReference>Eligible_For_Escalation_0</targetReference>
            </connector>
            <label>7 Days After Created Date</label>
            <offsetNumber>7</offsetNumber>
            <offsetUnit>Days</offsetUnit>
            <recordField>CreatedDate</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>Case_Payment_Created_Email</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;As assigned Deputy on Case &lt;/span&gt;&lt;a href=&quot;{!Case_Management_Hyperlink}&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; style=&quot;font-size: 14px;&quot;&gt;{!$Record.Case__r.Case_Number__c}, {!$Record.Case__r.Case_Name__c}&lt;/a&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;, please allocate the funds on this new Case Payment: &lt;/span&gt;&lt;a href=&quot;{!Case_Payment_Hyperlink}&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; style=&quot;font-size: 14px;&quot;&gt;{!$Record.Name}&lt;/a&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>Case_Payment_Created_Email_Subject</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Please allocate funds on new Case Payment {!$Record.Name} for Case {!$Record.Case__r.Case_Number__c}, {!$Record.Case__r.Case_Name__c}</text>
    </textTemplates>
    <textTemplates>
        <name>Case_Payment_Returned_Email</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 14px; color: rgb(0, 0, 0);&quot;&gt;A payment, &lt;/span&gt;&lt;a href=&quot;{!Case_Payment_Hyperlink}&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; style=&quot;font-size: 14px;&quot;&gt;{!$Record.Name}&lt;/a&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;has been returned on Case &lt;/span&gt;&lt;a href=&quot;{!Case_Management_Hyperlink}&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; style=&quot;font-size: 14px;&quot;&gt;{!$Record.Case__r.Case_Number__c}, {!$Record.Case__r.Case_Name__c}&lt;/a&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 14px; color: rgb(0, 0, 0);&quot;&gt;Payment Amount: {!$Record.Payment_Amount__c}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 14px; color: rgb(0, 0, 0);&quot;&gt;Payment Received Date: {!$Record.Date_Payment_Received__c}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 14px; color: rgb(0, 0, 0);&quot;&gt;Instrument Number: {!$Record.Instrument_Number__c}&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>Case_Payment_Returned_Email_Subject</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Payment {!$Record.Name} returned by bank on Case {!$Record.Case__r.Case_Number__c}, {!$Record.Case__r.Case_Name__c}</text>
    </textTemplates>
    <variables>
        <name>CpSumForCaseRollup</name>
        <dataType>Currency</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>CpSumForPpRollup</name>
        <dataType>Currency</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
</Flow>
