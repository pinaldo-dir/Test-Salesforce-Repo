<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>53.0</apiVersion>
    <assignments>
        <name>Assign_On_Hold_Reasons</name>
        <label>Assign On Hold Reasons</label>
        <locationX>1218</locationX>
        <locationY>413</locationY>
        <assignmentItems>
            <assignToReference>VarOnHold_Reasons</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Hold_Status.On_Hold_Reason__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarStatusType</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Hold_Status.Form1_Status_Type__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarInitialDate_Hold_Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Hold_Status.Date_of_Status__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Hold_Status</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_RtoP_Part_3_Reasons</name>
        <label>Assign RtoP Part 3 Reasons</label>
        <locationX>852</locationX>
        <locationY>363</locationY>
        <assignmentItems>
            <assignToReference>VarOnHold_Reasons</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Hold_Status.Part_3_Program_Return_Reason_s__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarStatusType</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Hold_Status.Form1_Status_Type__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarInitialDate_Hold_Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Hold_Status.Date_of_Status__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Hold_Status</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_RtoPpart1_Reasons</name>
        <label>Assign RtoP part1 Reasons</label>
        <locationX>587</locationX>
        <locationY>385</locationY>
        <assignmentItems>
            <assignToReference>VarOnHold_Reasons</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Hold_Status.Part_1_Program_Return_Reason_s__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarStatusType</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Hold_Status.Form1_Status_Type__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarInitialDate_Hold_Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Hold_Status.Date_of_Status__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Hold_Status</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignRtoPPart2Reasons</name>
        <label>Assign RtoP Part 2 Reasons</label>
        <locationX>835</locationX>
        <locationY>535</locationY>
        <assignmentItems>
            <assignToReference>VarOnHold_Reasons</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Hold_Status.Part_2_Program_Return_Reason_s__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarStatusType</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Hold_Status.Form1_Status_Type__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarInitialDate_Hold_Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Hold_Status.Date_of_Status__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Hold_Status</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>if there&apos;s no record found, then clear out existing Status and Reasons for &apos;Hold Status&apos;</description>
        <name>Any_Record_Found</name>
        <label>Any Record Found?</label>
        <locationX>459</locationX>
        <locationY>785</locationY>
        <defaultConnector>
            <targetReference>Loop_Hold_Status</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>No_Record_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Collection_Hold_Status</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Form_1_Hold_Status_to_NULL</targetReference>
            </connector>
            <label>No Record Found</label>
        </rules>
    </decisions>
    <decisions>
        <description>Use 1/1/1900 as initial date to compare</description>
        <name>Compare_Date_to_Find_Max</name>
        <label>Compare Date to Find Max</label>
        <locationX>964</locationX>
        <locationY>796</locationY>
        <defaultConnector>
            <targetReference>Loop_Hold_Status</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Less than VarInitialDate</defaultConnectorLabel>
        <rules>
            <name>Greater_Equal_to_VarInitialDate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_Hold_Status.Date_of_Status__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>VarInitialDate_Hold_Status</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_Hold_Status.Error_or_Invalid__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Identify_Status_Type</targetReference>
            </connector>
            <label>Greater Equal to VarInitialDate</label>
        </rules>
    </decisions>
    <decisions>
        <description>Only limit to status types RtoPP1/RtoPP2/RtoPP3/On Hold</description>
        <name>Hold_Status_Records</name>
        <label>Hold Status Records</label>
        <locationX>349</locationX>
        <locationY>489</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>All_On_Hold_Status</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Form1_Status_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Part 1 Return to Program</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Form1_Status_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Part 2 Return to Program</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Form1_Status_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Part 3 Return to Program</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Form1_Status_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>On Hold</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Collection_Hold_Status</targetReference>
            </connector>
            <label>All On Hold Status</label>
        </rules>
    </decisions>
    <decisions>
        <description>Status types within the &apos;Hold Status&apos; group</description>
        <name>Identify_Status_Type</name>
        <label>Identify Status Type</label>
        <locationX>1259</locationX>
        <locationY>686</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>RtoPpart1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_Hold_Status.Form1_Status_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Part 1 Return to Program</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_RtoPpart1_Reasons</targetReference>
            </connector>
            <label>RtoPpart1</label>
        </rules>
        <rules>
            <name>RtoPpart2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_Hold_Status.Form1_Status_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Part 2 Return to Program</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignRtoPPart2Reasons</targetReference>
            </connector>
            <label>RtoPpart2</label>
        </rules>
        <rules>
            <name>RtoPpart3</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_Hold_Status.Form1_Status_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Part 3 Return to Program</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_RtoP_Part_3_Reasons</targetReference>
            </connector>
            <label>RtoPpart3</label>
        </rules>
        <rules>
            <name>On_Hold</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_Hold_Status.Form1_Status_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>On Hold</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_On_Hold_Reasons</targetReference>
            </connector>
            <label>On Hold</label>
        </rules>
    </decisions>
    <description>Find latest Hold status and update Form 1.</description>
    <interviewLabel>HR Form 1 Status - Latest Status - Hold {!$Flow.CurrentDateTime}</interviewLabel>
    <label>HR Form 1 Status - Latest Status - Hold</label>
    <loops>
        <name>Loop_Hold_Status</name>
        <label>Loop Hold Status</label>
        <locationX>482</locationX>
        <locationY>574</locationY>
        <collectionReference>Collection_Hold_Status</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Compare_Date_to_Find_Max</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_Form_1_With_Hold_Information</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Collection_Hold_Status</name>
        <label>Collection_Hold_Status</label>
        <locationX>351</locationX>
        <locationY>618</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Any_Record_Found</targetReference>
        </connector>
        <filterLogic>1 AND ( 2 OR 3 OR 4 OR 5 )</filterLogic>
        <filters>
            <field>Form_1__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Form_1__r.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Form1_Status_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Part 1 Return to Program</stringValue>
            </value>
        </filters>
        <filters>
            <field>Form1_Status_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Part 2 Return to Program</stringValue>
            </value>
        </filters>
        <filters>
            <field>Form1_Status_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Part 3 Return to Program</stringValue>
            </value>
        </filters>
        <filters>
            <field>Form1_Status_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>On Hold</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Form_1_Status__c</object>
        <sortField>Name</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>No status found</description>
        <name>Update_Form_1_Hold_Status_to_NULL</name>
        <label>Update Form 1 Hold Status to NULL</label>
        <locationX>211</locationX>
        <locationY>673</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Form_1__r.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Hold_Reasons__c</field>
            <value>
                <stringValue></stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Info_Hold_Status__c</field>
            <value>
                <stringValue></stringValue>
            </value>
        </inputAssignments>
        <object>Form_1__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Form_1_With_Hold_Information</name>
        <label>Update Form 1 With Hold Information</label>
        <locationX>605</locationX>
        <locationY>759</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Form_1__r.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Hold_Reasons__c</field>
            <value>
                <elementReference>VarOnHold_Reasons</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Info_Hold_Status__c</field>
            <value>
                <elementReference>VarStatusType</elementReference>
            </value>
        </inputAssignments>
        <object>Form_1__c</object>
    </recordUpdates>
    <start>
        <locationX>221</locationX>
        <locationY>186</locationY>
        <connector>
            <targetReference>Hold_Status_Records</targetReference>
        </connector>
        <object>Form_1_Status__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <description>1/1/1900</description>
        <name>VarInitialDate_Hold_Status</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <dateValue>1900-01-01</dateValue>
        </value>
    </variables>
    <variables>
        <name>VarOnHold_Reasons</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>VarOnHold_Reasons_Other</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>VarStatusType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
