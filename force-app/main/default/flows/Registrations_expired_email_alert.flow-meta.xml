<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Registration_Email_expired_notice</name>
        <label>Registration Email expired notice</label>
        <locationX>440</locationX>
        <locationY>576</locationY>
        <actionName>License_Registration__c.Reg_expired_email_notification</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>Set_Expired_flag</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>loopExpiredRegistrations.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>License_Registration__c.Reg_expired_email_notification</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>54.0</apiVersion>
    <assignments>
        <description>Add registration records to collection variable</description>
        <name>Registration_Expired_list</name>
        <label>Registration Expired list</label>
        <locationX>440</locationX>
        <locationY>792</locationY>
        <assignmentItems>
            <assignToReference>Registrationexpiredcollectionlist</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>loopExpiredRegistrations</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loopExpiredRegistrations</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Set registration expiration flag once expired emails are sent</description>
        <name>Set_Expired_flag</name>
        <label>Set Expired flag</label>
        <locationX>440</locationX>
        <locationY>684</locationY>
        <assignmentItems>
            <assignToReference>loopExpiredRegistrations.expiredRegEmailSent__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Registration_Expired_list</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>check_if_expired_registrations_does_have_community_user_email</name>
        <label>check if expired registrations does have community user email</label>
        <locationX>352</locationX>
        <locationY>468</locationY>
        <defaultConnector>
            <targetReference>Registration_Email_expired_notice</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>expired_registrations_does_have_community_user_email</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>loopExpiredRegistrations.Applicant_s_Email__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>loopExpiredRegistrations</targetReference>
            </connector>
            <label>expired registrations does have community user email</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>regExpireDate</name>
        <dataType>Date</dataType>
        <expression>TODAY() - 1</expression>
    </formulas>
    <interviewLabel>Registrations expired email alert {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Registrations expired email alert</label>
    <loops>
        <name>loopExpiredRegistrations</name>
        <label>loopExpiredRegistrations</label>
        <locationX>176</locationX>
        <locationY>360</locationY>
        <collectionReference>varExpiredRegistrations</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>check_if_expired_registrations_does_have_community_user_email</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>UpdateRegistrationExpiredFlag</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_all_registrations_that_are_expired_to_send_email_notification</name>
        <label>Get all registrations that are expired to send email notification</label>
        <locationX>176</locationX>
        <locationY>252</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>loopExpiredRegistrations</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Expiration_Date__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>regExpireDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Expired</stringValue>
            </value>
        </filters>
        <filters>
            <field>Service_Type__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Temporary</stringValue>
            </value>
        </filters>
        <filters>
            <field>Record_Type_Name__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Entertainment_Work</stringValue>
            </value>
        </filters>
        <filters>
            <field>Record_Type_Name__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Permit_to_Employ_Minors</stringValue>
            </value>
        </filters>
        <filters>
            <field>Record_Type_Name__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Public_Works</stringValue>
            </value>
        </filters>
        <object>License_Registration__c</object>
        <outputReference>varExpiredRegistrations</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Applicant_s_Email__c</queriedFields>
        <sortField>Expiration_Date__c</sortField>
        <sortOrder>Asc</sortOrder>
    </recordLookups>
    <recordUpdates>
        <description>Update ExpiredRegEmailFlag</description>
        <name>UpdateRegistrationExpiredFlag</name>
        <label>UpdateRegistrationExpiredFlag</label>
        <locationX>176</locationX>
        <locationY>1068</locationY>
        <inputReference>Registrationexpiredcollectionlist</inputReference>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_all_registrations_that_are_expired_to_send_email_notification</targetReference>
        </connector>
        <schedule>
            <frequency>Daily</frequency>
            <startDate>2022-07-21</startDate>
            <startTime>06:20:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <description>Each variable is modified by the operator and value combination</description>
        <name>Addrecordstocollectiontoupdateexpireflat</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>False</stringValue>
        </value>
    </variables>
    <variables>
        <description>Add Registrations that are flag to update</description>
        <name>Registrationexpiredcollectionlist</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>License_Registration__c</objectType>
    </variables>
    <variables>
        <name>varExpiredRegistrations</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>License_Registration__c</objectType>
    </variables>
</Flow>
